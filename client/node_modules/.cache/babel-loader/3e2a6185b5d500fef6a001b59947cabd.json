{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    console.log('HI');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsSuccess(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/danila/Study/Online-clothing-shop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","console","log","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAK;AAC3C,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAH,IAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AAChC,YAAMd,cAAc,GAAGL,+BAA+B,CAACmB,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGe,KAHH,CAGSC,KAAK,IAAIT,QAAQ,CAACR,uBAAuB,CAACiB,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils' \n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () =>{\n    return dispatch =>{\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart())\n        console.log('HI')\n        collectionRef.get().then(snapshot =>{\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            dispatch(fetchCollectionsSuccess(collectionsMap))\n        }).catch(error => dispatch(fetchCollectionsSuccess(error.message)))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}