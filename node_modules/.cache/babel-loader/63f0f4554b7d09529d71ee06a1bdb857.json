{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    //const userRef = yield auth.signInWithPopup(googleProvider)\n    //console.log(userRef)\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/danila/Study/Online-clothing-shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SAAQC,mBAAR,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,QAA+F,gBAA/F;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC;AACA;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAGD,OAAO,CAACE,GAAR,EAArB;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG;AAAtC,KAAD,CAApB,CAAT;AACH,GAPD,CAOC,OAAMC,KAAN,EAAY;AACT,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AACzD,MAAG;AACC,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAGD,OAAO,CAACE,GAAR,EAArB;AACA,UAAMhB,GAAG,CAACS,kBAAkB,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG;AAAtC,KAAD,CAAnB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACTnB,IAAAA,GAAG,CAACU,kBAAkB,CAACS,KAAD,CAAnB,CAAH;AACH;AACJ;AAED,OAAO,UAAUQ,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nimport {googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure} from './user.actions'\n\nexport function* signInWithGoogle(){\n    try{\n        //const userRef = yield auth.signInWithPopup(googleProvider)\n        //console.log(userRef)\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = userRef.get()\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data}))\n    }catch(error){\n        yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({payload:{email, password}}){\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = userRef.get()\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data}))\n    }catch(error){\n        put(emailSignInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}